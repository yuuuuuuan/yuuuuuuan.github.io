---
layout: post
title:  "[assembly]设计:矩阵键盘"
date:   2023-07-20 
categories: assembly
---

用汇编来设计矩阵键盘

## 介绍

按键是简单的输入设备，实质就是一个按钮开关。矩阵键盘通常由多个按钮或按键组成，这些按键被排列成一个矩阵形状。按键的行和列是交叉连接的，形成一个按键矩阵。每个按键都有一个唯一的行列地址。
矩阵键盘的优点是它的按键数量相对较少，但可以支持大量按键。这种结构使得矩阵键盘在成本和资源上具有优势。然而，它也有一些局限性，例如在同时按下多个按键时可能会出现冲突，需要适当的防抖处理。因此，矩阵键盘通常用于需要较少按键的场景，而对于需要高精度输入或同时按下多个按键的场景，可能会选择其他更复杂的键盘结构。

![image](/assets/矩阵键盘.PNG)
*某c51系列单片机上的矩阵键盘原理图*

矩阵键盘中的按键按照矩阵排列，每个按键都对应一个行和一个列，形成了一个类似于二维数组的结构。
由图可见它由4行和4列按键组成，总共有16个按键。只需要8个IO口就可以控制16个按键的输入。

行线和列线分别连接到按键的两端。
行线输出低电平，列线输入。
    如无键按下，所有输入都是高电平。
    某列键按下，读入该列的列线值为低电平。
列线输出低电平，行线输入。
    若某位为低电平则说明该行按键被按下。
    结合行线和列线的值就能确定按键的具体位置，即键值。

## 工作流程

**扫描过程：**

矩阵键盘通过行和列的交叉连接，使用微控制器或电子设备进行扫描。在扫描开始时，会将所有的行引脚设置为高电平，而将所有的列引脚设置为输入模式。

其中扫面有两种方法：

- 逐行扫描法

依次输出各行的行扫描值（该行的行线输出低电平，其余行线输出高电平），检测列线是否有键按下。
        若没有，继续输出下一行扫描值，检测下一行，直到检测到有键按下。  
        根据闭合键的行扫描值和列值可得到按键的键码。
        缺点是当闭合键位于最后一行时，要经过多次扫描才能获得键码。

- 线反转法

先行全扫描，读取列值；
        再列全扫描，读取行值；
        将读取的行、列值组合即可得到键码。
        只需两步便能获得按键所在行列值，提高了键盘扫描的工作效率。
矩阵键盘的应用中同样要进行按键的去抖动处理。


**按键检测：**

然后，逐个遍历每一行，将当前行设置为低电平，并读取所有列引脚的状态。如果有按键按下，则在对应的列引脚会检测到低电平信号，反之，如果没有按键按下，则所有列引脚都会保持高电平。
 

**按键编码：**

扫描完成后，微控制器会根据检测到的按键状态编码并记录按键的位置。通常，这个编码可以使用一个数字或其他标识来表示按下的按键。

**输出数据：**

在检测完成后，微控制器会将按键状态传递给相应的处理程序或应用程序。这样，就可以知道哪些按键被按下，进而执行相应的操作。

